version: "3.4"
services:
  generic_bird:
    image: ${GENERIC_BIRD_IMAGE}
    container_name: generic_bird
    environment:
      PYWPS_CFG: /wps.cfg
    ports:
      - "${GENERIC_BIRD_PORT}:${GENERIC_BIRD_INTERNAL_PORT}"
    volumes:
      - ./optional-components/generic_bird/wps.cfg:/wps.cfg:ro
      - wps_outputs:/data/wpsoutputs
      - /tmp
    links:
      - postgres_generic_bird
    restart: always

  postgres_generic_bird:
    image: ${GENERIC_BIRD_POSTGRES_IMAGE}
    container_name: postgres_generic_bird
    volumes:
      - postgres_generic_bird:/var/lib/postgresql/data/pgdata
      - ./optional-components/generic_bird/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
    env_file:
      - ./config/postgres/credentials.env
    restart: always

  magpie:
    volumes:
    - ./optional-components/generic_bird/generic_bird-magpie-permission.cfg:/opt/local/src/magpie/config/permissions/generic_bird-magpie-permission.cfg:ro
    - ./optional-components/generic_bird/generic_bird-magpie-provider.cfg:/opt/local/src/magpie/config/providers/generic_bird-magpie-provider.cfg:ro

  proxy:
    volumes:
    - ./optional-components/generic_bird/generic_bird_canarie_api_monitoring.py:${CANARIE_MONITORING_EXTRA_CONF_DIR}/generic_bird_canarie_api_monitoring.py:ro

volumes:
  postgres_generic_bird: {}
